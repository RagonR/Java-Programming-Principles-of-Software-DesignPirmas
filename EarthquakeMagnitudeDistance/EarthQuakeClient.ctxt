#BlueJ class context
comment0.target=EarthQuakeClient
comment1.params=
comment1.target=EarthQuakeClient()
comment10.params=quakeData\ howMany
comment10.target=java.util.ArrayList\ getLargest(java.util.ArrayList,\ int)
comment10.text=public\ void\ indexOfLargest\ ()\ {\r\n\ \ \ \ \ \ \ \ EarthQuakeParser\ parser\ \=\ new\ EarthQuakeParser();\r\n\ \ \ \ \ \ \ \ ArrayList<QuakeEntry>\ list\ \=\ parser.read(source);\r\n\ \ \ \ \ \ \ \ System.out.println("read\ data\ for\ "\ +\ list.size()\ +\ "\ quakes");\r\n\ \ \ \ \ \ \ \ double\ magMax\ \=\ 0.0;\r\n\ \ \ \ \ \ \ \ int\ index\ \=\ 0;\r\n\ \ \ \ \ \ \ \ int\ i\ \=\ 0;\r\n\ \ \ \ \ \ \ \ for\ (QuakeEntry\ qe\ \:\ list)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ if\ (qe.getMagnitude()\ >\ magMax)\ {\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ magMax\ \=\ qe.getMagnitude();\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ index\ \=\ i;\r\n\ \ \ \ \ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ \ \ \ \ i++;\r\n\ \ \ \ \ \ \ \ }\r\n\ \ \ \ \ \ \ \ System.out.println("earthquake\ is\ at\ location\ "+\ index\ +\ "\ and\ has\ magnitude\ "\ +\ magMax);\r\n}
comment11.params=
comment11.target=void\ findLargestQuakes()
comment12.params=
comment12.target=void\ bigQuakes()
comment13.params=
comment13.target=void\ createCSV()
comment14.params=
comment14.target=void\ findClosestQuakes()
comment15.params=list\ jakarta\ howMany
comment15.target=void\ outPrintForFindClosestQuakes(java.util.ArrayList,\ Location,\ int)
comment16.params=
comment16.target=void\ closeToMe()
comment17.params=list\ Durham\ radius
comment17.target=void\ outPrintForCloseToMe(java.util.ArrayList,\ Location,\ int)
comment2.params=quakeData\ magMin
comment2.target=java.util.ArrayList\ filterByMagnitude(java.util.ArrayList,\ double)
comment3.params=quakeData\ distMax\ from
comment3.target=java.util.ArrayList\ filterByDistanceFrom(java.util.ArrayList,\ double,\ Location)
comment4.params=quakeData\ minDepth\ maxDepth
comment4.target=java.util.ArrayList\ filterByDepth(java.util.ArrayList,\ double,\ double)
comment5.params=quakeData\ whereToSearch\ phrase
comment5.target=java.util.ArrayList\ filterByPhrase(java.util.ArrayList,\ java.lang.String,\ java.lang.String)
comment6.params=
comment6.target=void\ quakesByPhrase()
comment7.params=quakeData\ current\ howMany
comment7.target=java.util.ArrayList\ getClosest(java.util.ArrayList,\ Location,\ int)
comment8.params=list
comment8.target=void\ dumpCSV(java.util.ArrayList)
comment9.params=
comment9.target=void\ quakesOfDepth()
numComments=18
